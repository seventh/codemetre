*** v0.27.1

 - Outils / codemetre_disciple.py : ajout d'un paramètre optionnel permettant de
 régler la hauteur de l'arborescence à prendre en compte pour définir l'unicité
 des fichiers.
 - Outils : renommage et robustification. Particulièrement, on peut désormais
 créer ses propres modèles de mesure.

*** v0.27.0

 - Ada : association avec l'extension '.adc' ajoutée.
 - SH : support rudimentaire de la syntaxe. La différenciation des chaînes de
 caractères n'est par exemple pas encore effectué.

*** v0.26.2

 - Ada : Les formulations du type '["03C0"]' sont désormais acceptées.
 - Correction du message d'aide pour favoriser '--dump'.

*** v0.26.1

 - HTML : les commentaires qui ne sont pas séparés de ce qui les précède par un
 espace n'étaient pas détectés.
 - Renommage de l'option '--anal' en '--dump'.
 - Possibilité de coupler mesure différentielle et analyse.

*** v0.26.0

 - Support rudimentaire de la syntaxe HTML.
 - Correction du bogue n°2 : l'option '--config' n'affichait plus uniquement que
 la configuraiton par défaut (ce qui en limitait l'intérêt)
 - Meilleur message d'erreur dans le cas où l'argument est un répertoire vide.
 - L'analyse de fichiers est désormais systématiquement couplée à la mesure
 unitaire correspondante. La section 'analysis' disparaît en conséquence, au
 profit du champ 'unit.analysis'.
 - Allègement des contraintes sur le fichier de configuration. Une section peut
 désormais apparaître plus d'une fois, une valeur d'une même section également.

*** v0.25.0

 - Support rudimentaire de la syntaxe SQL. Il reste au moins un conflit entre
 commentaires multi-lignes et les constantes chaîne. De plus, les flottants ne
 sont pas reconnus comme tel.
 - Ajout d'une directive "-noconfig" qui permet de ne pas prendre en compte la
 configuration utilisateur lors de l'exécution de la commande.
 - Outils python : détermination automatique de la racine d'un lot, et prise en
 compte de cette nouveauté dans 'factorisation.py'.

*** v0.24.1

 - Livraison d'utilitaires python pour gérer les lots.

*** v0.24.0

 - Désormais, la comparaison de lots ne provoque plus d'erreur intempestive
 lorsque deux lignes vides sont confrontées.
 - Analyse : les fichiers produits sont désormais suffixés ".cma"
 - Lots : possibilité de rajouter des commentaires (début de ligne par '#') et
 des directives "#dirname:=" pour factoriser la racine à partir de laquelle sont
 listées les entrées.

*** v0.23.0

 - L'option '--batch' disparaît au profit d'une association entre des extensions
 de fichier et le type 'batch'.
 - On peut dans le fichier de configuration ne vouloir associer aucune extension
 particulière à un langage L donné. Pour cela, on peut désormais écrire "L :="
 dans la section 'language' du dit fichier.

*** v0.22.2

 - Le bilan, lorsque demandé, est désormais également détaillé par langage.

*** v0.22.1

 - Correction du bogue n°1 : boucle infinie si un seul argument est précisé en
 mode différentiel sur la ligne de commande.

*** v0.22.0

 - Ajout d'une commande supplémentaire "--status" pour obtenir un bilan de toute
 l'analyse.
 - Windows : correction d'une erreur sur le projet Code::Blocks

*** v0.21.0

 - Windows : fourniture d'un bouchon pour gettext, ainsi que d'un descripteur de
 projet Code::Blocks.
 - Windows : le fichier de configuration est recherché sous l'appelation
 "%APPDATA%\codemetre.ini" plutôt que "$(HOME)/.codemetrerc" dans le monde Unix.

*** v0.20.3

 - Mesure différentielle : jusqu'alors, la version courante d'un fichier n'était
 analysée que si sa version précédente avait pu être chargée sans problème.
 Désormais, on analyse systématiquement les deux, pour pouvoir remonter un
 message d'erreur complet à l'utilisateur.

*** v0.20.2

 - Ada : correction d'un bogue dans l'analyse (la chaîne "CHARACTER'('A')" était
 mal analysée avant)
 - Ada : correction d'un bogue de boucle infini en cas de commentaire en fin de
 fin de fichier sans retour à la ligne.
 - Correction de quelques points extrêmement mineurs de performance mémoire.

*** v0.20.1

 - Mesure différentielle : mise en place d'un certain nombre d'optimisations
 (relations d'ordre, suppression d'un dictionnaire) qui permettent de réduire le
 temps écoulé de 40% environ.

*** v0.20.0

 - Configuration : ajout des sections 'analysis', 'diff' et 'unit' qui
 permettent de configurer chaque type de mesure. Dans ces trois sections est
 introduite la variable 'filter' qui permet de choisir ce qui sera mesuré ou
 rapporté.
 - Configuration : ajout des variables 'model' et 'short' qui précisent
 respectivement la métrique différentielle à utiliser et l'utilisation ou non
 d'une sortie compacte. Du coup, il est impossible par exemple d'empêcher à
 partir de la ligne de commande l'affichage compact s'il a été demandé par
 défaut ou dans le fichier de configuration utilisateur.
 - En mode autodétection, les fichiers sans suffixe n'étaient pas remontés en
 erreur. C'est désormais corrigé.

*** v0.19.3

 - Optimisation : le temps de lecture des fichiers a été divisé par deux, même
 si l'implémentation de l'équivalent de 'find' s'avère être plus lent que la
 commande système.

*** v0.19.2

 - Suppression de la dépendance à la commande système 'find'. Ceci nécessite
 d'appliquer un patch spécifique au compilateur pour que DIRECTORY.scan assure
 que DIRECTORY.path est toujours terminé par une marque de répertoire.

*** v0.19.1

 - Nettoyage systématique du cache en mode différentiel entre deux commandes de
 mesure, améliorant de façon significative les performances (vitesse et mémoire)
 lors de la comparaison de gros projets, comme le noyau Linux.

*** v0.19.0

 - Mise-en-place d'un fichier de configuration utilisateur
 - Ajout de l'option "--config" pour produire la configuration courante
 - Les extensions ".ii" et ".tt" ne sont plus associées au c++ par défaut

*** v0.18.5

 - Les arborescences n'étaient parfois pas complètement apariées.

*** v0.18.4

 - Correction d'un bogue lors de l'utilisation de l'option "--short"
 - Ergonomie : les '/' terminants les noms de répertoire sont désormais
 supprimés, ce qui permet de comparer par exemple "toto" et "tata/"
 - Regroupements de certaines options ; apparition de "--lang" et "--model"

*** v0.18.3

 - Reconnaissance des extensions ".hh", ".tt" et ".ii" comme identifiant des
 fichiers du langage C++
 - Ajout de l'option "--short" en mode différentiel pour produire des sorties
 plus courtes (les fichiers identiques ne sont pas listés)

*** v0.18.2

 - Suppression de l'option "--tree" au profit d'une détection automatique

*** v0.18.1

 - Correction du comportement ératique de l'option "--tree"
 - Correction d'un bogue sur la détection automatique du langage en mode
 différentiel

*** v0.18.0

 - Support de l'option "--tree", qui permet à l'utilisateur de fournir un nom de
 répertoire plutôt qu'une liste de fichiers

*** v0.17.1

 - Ada95 : bogue corrigé par rapport à la détection des constantes littérales
 caractères. Typiquement, l'instruction STRING'("toto") était remontée comme une
 erreur, à tort.

*** v0.17.0

 - C : premier support
 - Le mot-clef '-nil-' peut être utilisé en mode différentiel pour désigner un
 lot
 - Remplacement du mot-clef "--lot" par "--batch"

*** v0.16.2

 - Internationalisation d'un dernier message en mode analyse

*** v0.16.1

 - Remplacement du mot-clef "-rien-" par "-nil-"
 - Remplacement du mot-clef "--commentaire" par "--comment"
 - Remplacement du mot-clef "--analyse" par "--anal"
 - Correction d'un bogue en cas de précision du périmètre à compter dans le cas
 d'un comptage unitaire

*** v0.16.0

 - Toutes les sorties sont désormais en anglais par défaut
 - La gestion de l'internationalisation est mise en place, et une traduction
 pour le français existe

*** v0.15.0

 - Le traitement par lots est opérationnel, pour tout type de commandes

*** v0.14.2

 - Toutes les sorties que ce soit sur la sortie standard ou d'erreur sont faites
 en UTF-8 au lieu d'ISO-8859-15.

*** v0.14.1

 - Possibilité de choisir le modèle de comptage différentiel ("--normal" par
 défaut, ou "--effort")

*** v0.14.0

 - Changement de l'analyse de la ligne de commande. La comparaison de fichiers
 passe de "<après> --reference <avant>" à "--diff <avant> <après>". L'option
 "--" force l'interprétation de ce qui suit comme des noms de fichier plutôt que
 comme d'autres options potentielles.

*** v0.13.2

 - Détection automatique du langage si aucun n'est précisé. Cependant, on ne
 peut pas comparer deux fichiers de langages différents.

*** v0.13.1

 - Nettoyage de code.

*** v0.13.0

 - Les métriques différentielles passent du modèle TRT2007 (propriétaire) à un
 modèle plus intuitif.

*** v0.12.0

 - Ada95 : retour en arrière sur la tolérance introduite en v0.11.11.
 - Désormais le message d'erreur fait mention du numéro de ligne et du statut de
 l'erreur.

*** v0.11.11

 - Ada95 : les '_' multiples sont autorisés dans les identifiants.

*** v0.11.10

 - Ada95 : tous les caractères 8 bits affichables sont autorisés dans les
 constantes littérales caractère.
 - C++ : le lexème produit après mention de '#' était erroné.

*** v0.11.9

 - Ada95 et C++ : utilisation du nouveau marqueur de fin de fichier '%U'.
 - Eiffel : gestion correcte des constantes littérales chaînes multi-ligne.

*** v0.11.8

 - Ada95 : la qualification de type a été corrigée (i.e. une accolade n'implique
 pas que l'on commence une constante littérale caractère).
 - Ada95 et C++ : tous les types d'erreur ont été précisés.
 - Eiffel : simplification de la gestion de la fin du fichier d'entrée (marque
 '%U').

*** v0.11.7

 - Simplification de la gestion d'erreur.
 - Eiffel : filtrage direct des sauts de lignes DOS par LUAT_ENTREE.

*** v0.11.6

 - Simplification de la gestion d'erreur.

*** v0.11.5

 - Introduction de LUAT_ENTREE afin de changer la logique de détection de fin de
 fichier.
 - Ada95 : le nom du langage est changé de "Ada95" par "Ada".

*** v0.11.4

 - Ada95 : tous les caractères 8 bits affichables sont autorisés dans les
 constantes littérales chaîne.

*** v0.11.3

 - Plusieurs comptages différentiels peuvent être demandés dans une même
 commande.

*** v0.11.2

 - Suppression d'appels inutiles.

*** v0.11.1

 - Ada95 : L'analyseur comprend désormais correctement les entrées du type
 "1..2", et ne provoque donc plus d'erreur sur ce cas précis.

*** v0.11.0

 - Ada95 : Premier support.

*** v0.10.0

 - Menues optimisations, particulièrement sur les chaînes de caractères
 constantes présentes dans l'application.

*** v0.9.8

 - C++ : Les états de l'analyseur sont plus explicites.

*** v0.9.7

 - C++ : Suppression de la dépendance à GOBO (gelex).
 - Compatibilité assurée avec SmartEiffel 2.3.

*** v0.9.2

 - Eiffel : Suppression de la dépendance à GOBO (gelex).

*** v0.9.1

 - La ligne de commande est analysée manuellement, ce qui permet de supprimer la
 dépendance à GOBO (geyacc).

*** v0.9.0

 - Réorganisation du code source.

*** v0.8.0

 - Compatibilité assurée avec SmartEiffel 2.1.

*** v0.7.1

 - Compatibilité assurée avec SmartEiffel 1.1.
