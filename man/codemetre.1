.\" Formater ce fichier par la commande :
.\" groff -man -Tutf8 codemetre.fr.1
.\"
.TH CODEMETRE 1 "JANVIER 2010" Linux "Manuel utilisateur"
.SH NOM
codemetre \- comptage de ligne de fichiers source
.SH SYNOPSIS
.B codemetre
[--code] [--comment] [--total] [--lang <>] [--status] [--anal|--diff [--short] [--model <>]] [--noconfig] [--] FICHIER|RÉPERTOIRE|LOT...
.SH DESCRIPTION
.B codemetre
mesure la taille de fichiers sources en nombre de lignes physiques de code et de commentaires. Il permet également d'évaluer l'effort réalisé entre deux versions d'un même fichier, toujours en nombre de lignes physiques.
.SH OPTIONS PARTICULIÈRES
L'option "--" permet de signifier que les arguments restants ne sont pas des options. Ceci peut s'avérer utile lorsqu'un fichier à analyser porte le nom d'une option.

.SH LANGAGES RECONNUS
Si aucun langage n'est choisi grâce à l'option --lang, alors
.B codemetre
essaiera de déterminer celui-ci à partir de l'extension du fichier. Sinon, ce choix prévaut quelque soit l'extension du ou des fichiers à mesurer. La section "language" du fichier de configuration ${HOME}/.codemetrerc permet d'associer des suffixes supplémentaires aux langages déjà reconnus, voire de remplacer la configuration par défaut. Les langages reconnus actuellement sont :
.IP ada
Respecte le standard Ada95. Extensions ".ads" et ".adb".
.IP batch
Ce type correspond aux lots codemetre (cf section TRAITEMENT PAR LOT). Extension ".cmb".
.IP c
Respecte la norme C ISO/IEC 9899:1999. Extensions ".h" et ".c".
.IP c++
Respecte la norme C++ ISO/IEC 14882:2003. Extensions ".hh", ".hpp", ".C", ".cc" et ".cpp".
.IP eiffel
Respecte le standard Eiffel tel que définit dans le livre "Eiffel, le langage" de B. Meyer paru chez InterEditions en 1994. Extension ".e".
.IP html
Extension ".html".
.IP shell
Conforme aux variantes bash et ksh. Extensions ".bash", ".ksh" et ".sh".
.IP sql
Respecte le standard MySQL 5.1. Extension ".sql".
.SH TRAITEMENT PAR LOT
Les lots sont constitués de noms de fichiers à analyser (qui ne sont pas d'autres lots), ou des lignes vides. Lors de l'analyse différentielle avec deux lots, ceux-ci sont comparés ligne à ligne : le premier fichier du premier lot avec le premier fichier du second lot, puis le deuxième fichier du premier lot avec le deuxième fichier du second lot, et ainsi de suite. Si les deux lots ne font pas le même nombre de ligne, le plus court est considéré comme se poursuivant avec autant de lignes vides que nécessaire.
.SH SPECTRE DE L'ANALYSE
.B codemetre
sait différencier le code des commentaires, et peut ne prendre en compte que l'un ou l'autre. Attention, une seule des options suivantes est autorisée lors d'une demande d'analyse lexicale ou de comparaison différentielle. Dans le cas d'un simple comptage de ligne sans comparaison, ces options peuvent être combinées.
.IP --code
Ne conserve pour l'analyse que les lignes de code.
.IP --comment
Ne conserve pour l'analyse que les lignes de commentaire.
.IP --total
Prend en compte à la fois le code et les commentaires lors de l'analyse.
.SH COMMANDES
.IP "<fichier> ..."
Détermine le nombre de lignes constituant le
.I fichier
. Par défaut, le nombre de lignes de code et de commentaires sont produits.
.IP "<répertoire> ..."
Le
.I répertoire
est parcouru pour mesurer tous les fichiers qu'il contient.
.IP "--diff <avant> <après>"
Détermine l'effort minimal qui a été réalisé pour transformer
.I <avant>
en
.I <après>.
Ces métriques sont proposées selon un modèle assez intuitif (voir plus loin). Pour préciser qu'un fichier n'existait pas, ou n'existe plus, on peut utiliser le mot-clef spécifique
.B -nil-.
Les deux arguments peuvent être soit des fichiers, soit des répertoires. Dans le cas de répertoires,
.B codemetre
cherchera à faire coïncider les noms de fichiers deux à deux, relativement à
.I <avant>
et
.I <après>.
.IP "--anal <fichier> ..."
Produit pour chaque
.I <fichier>
en entrée un fichier suffixé
.I .codemetre
isolant chaque terme et en le qualifiant CODE ou COMMENTAIRE.
.IP "--anal <répertoire> ..."
Produit un fichier d'analyse pour chaque fichier du
.I répertoire.
.SH MODÈLE DIFFÉRENTIEL
Il existe plusieurs modèles de comptage différentiel, chacun étant détaillé dans une section plus loin. Le modèle normal est le modèle par défaut. Le modèle utilisé est configurable à travers l'option "--model".
.IP normal
produit trois métriques fondamentales qui permettent d'en construire d'autre (comme l'effort par exemple)
.IP effort
détermine, en pourcentage de la taille du fichier, l'effort qui a été fourni entre les deux versions.
À noter que l'option
.B "--short"
permet d'obtenir des sorties compactes, où ne sont listés que les fichiers présentant vraiment une différence entre deux versions.
.SH MODÈLE DIFFÉRENTIEL : NORMAL
La définition des trois métriques du modèle normal est :
.IP A
dénombre les lignes de l'ancienne version du fichier.
.IP N
dénombre les lignes de la nouvelle version du fichier.
.IP C
dénombre les lignes communes aux deux versions du fichier.
.SH MODÈLE DIFFÉRENTIEL : EFFORT
L'effort entre deux versions d'un fichier est définit comme le nombre de lignes nouvelles sur la taille du fichier. Si l'on prend la notation du modèle normal, cela correspond à (N-C)/N. Par extension, un fichier supprimé correspond à un effort de 0%.
.SH DIAGNOSTICS
Si malgré le forçage d'un choix de langage, l'analyse d'un fichier venait à échouer, un message détaillé est produit en indiquant l'endroit.
.SH TOLÉRANCE PAR RAPPORT AUX NORMES OFFICIELLES
.IP Ada95
théoriquement, seuls les caractères ASCII 7 bits sont autorisés pour les constantes littérales.
.B codemetre
tolère tous les caractères 8 bits.
.SH FICHIER DE CONFIGURATION
Chaque utilisateur peut surcharger les options par défaut de
.I codemetre
dans un fichier au format similaire à ce qui peut-être obtenu par le biais de la commande
.B codemetre --config.
La surcharge de la configuration par défaut doit être faite dans un fichier dénommé .codemetrerc et situé dans $(HOME). Nota : sous Windows, le fichier de configuration dénommé codemetre.ini est recherché dans %APPDATA%.
En plus de l'opérateur ':=' pour modifier une variable, les opérateurs '+=' et '-=' peuvent également être utilisés, afin respectivement d'augmenter et de restreindre la liste des options par défaut.
Pour certaines variables, notamment celles de la section 'language', on peut utiliser l'opérateur ':=' sans préciser d'extension de fichier à la suite ; cela revient à dire qu'aucune extension de fichier ne sera associée au dit langage.
.SH BOGUES ET LIMITATIONS
.B codemetre
ne fait pas l'expansion des macro-commandes du C/C++, même si ceci ne modifierait pas les mesures produites. En effet, certaines macros-commandes peuvent être définies ailleurs que dans le fichier sous analyse, et
.B codemetre
n'a pas connaissance de l'organisation du projet et des règles de visibilités entre répertoires.

La double association d'une même extension à la fois pour les lots et un langage particulier n'est pas détectée. Néanmoins, l'association au lot prévaut.

Lors d'une mesure différentielle, tout bloc déplacé n'est a priori pas considéré commun aux deux versions de fichier, parce que l'impact de ce mouvement ne peut être évalué.

Concernant Eiffel,
.B codemetre
ne supporte pas tous les foisonnements de syntaxe particuliers à chaque compilateur.
.SH AUTEUR
Guillaume Lemaître	<guillaume.lemaitre@gmail.com>
.SH "VOIR AUSSI"
.BR diff (1),
.BR wc(1).
