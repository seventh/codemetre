.\" Formater ce fichier par la commande :
.\" less codemetre.fr.1
.\"
.TH CODEMETRE 1 "juin 2010" "codemetre-0.29.0" "Manuel de l'utilisateur Linux"
.\" Pour empêcher toute velléité de césure des mots
.nh
.SH NOM
codemetre - comptage de ligne de fichiers source
.SH SYNOPSIS
.B codemetre
.RI [ OPTIONS ]
FICHIER|RÉPERTOIRE|LOT...
.br
.B codemetre
--config
.SH DESCRIPTION
.B codemetre
mesure la taille de fichiers sources en nombre de lignes physiques de code et de commentaires. Il permet également d'évaluer l'effort réalisé entre deux versions d'un même fichier. On parle alors de mesure différentielle.
.SH OPTIONS
.TP
.BR --
Signifier que les arguments restants ne sont pas des options mais nécessairement des noms issus du système de fichiers. Cette option n'a d'utilité que lorsque une entrée à analyser porte le nom d'une option.
.SS "Spectre de l'analyse"
Les métriques produites peuvent ne porter que sur une partie du contenu des fichiers, en se limitant uniquement au code ou aux commentaires. Cependant, l'analyse est dans tous les cas menée complètement.
.B codemetre
peut donc échouer à analyser un fichier dont on ne souhaite connaître que le volume de commentaires parce que le code est invalide. Le contrôle de ce qui est est pris en compte lors de la mesure de chaque fichier est possible à travers les trois options suivantes :
.TP
.BR --code
Limiter la mesure au code.
.TP
.BR --comment
Limiter la mesure aux commentaires.
.TP
.BR --total
Ne rien filtrer des entrées lors de la mesure.
.SS "Mesures différentielles"
.TP
.BR --diff
Indiquer que les (deux) arguments ne doivent pas être mesurés successivement mais comparés. L'ordre des arguments est alors le même que celui de
.B diff :
le premier est la version de référence, le second la version actuelle.
.TP
.BR --model " " CMD_MODEL
Fixer le modèle de mesure différentiel appliqué (voir plus loin).
.TP
.BR --short
Limiter la sortie aux fichiers ayant évolué. Par contre, tous les fichiers sont pris en compte dans la consolidation éventuellement demandée par l'option
.B --status.
.SS "Langage de programmation"
.B codemetre
identifie le langage de programmation utilisé par l'extension portée par le fichier analysé. Ces associations sont configurables (voir plus loin). Néanmoins, ce mécanisme peut être chunté.
.TP
.BR --lang " " CMD_LANG
Considérer que toute entrée à analyser est écrite dans le langage CMD_LANG, indépendamment de son extension.
.SS "Informations complémentaires"
.TP
.BR --dump
Produire, pour chaque fichier analysé, le résultat de cette analyse dans un fichier suffixé ".cma" à l'endroit même où est stocké le fichier d'origine.
.TP
.BR --status
Produire, en fin d'analyse, une consolidation par langage de programmation des mesures effectuées.
.SS "Configuration"
.TP
.BR --config
affiche la configuration appliquée, résultat de l'amendement de la configuration par défaut avec le fichier de configuration utilisateur le cas échéant. Cette option doit être utilisée seule, sans autre paramètre.
.TP
.BR --noconfig
Ignorer la configuration utilisateur et ne prendre en compte que la configuration par défaut.
.SH LANGAGES RECONNUS
Si aucun langage n'est choisi via l'option --lang, alors
.B codemetre
essaiera de déterminer celui-ci à partir de l'extension du fichier. La section "language" du fichier de configuration permet de modifier ces associations entre extensions de fichier et langage (voir plus loin) Les valeurs autorisées après l'option
.B --lang
sont :
.TP
.BR ada
Respecte le standard Ada95. Extensions ".ads" et ".adb".
.TP
.BR batch
Ce type correspond aux lots codemetre (cf. section TRAITEMENT PAR LOT). Extension ".cmb".
.TP
.BR c
Respecte la norme C ISO/IEC 9899:1999. Extensions ".h" et ".c".
.TP
.BR c++
Respecte la norme C++ ISO/IEC 14882:2003. Extensions ".hh", ".hpp", ".C", ".cc" et ".cpp".
.TP
.BR eiffel
Respecte le standard Eiffel tel que définit dans le livre "Eiffel, le langage" de B. Meyer paru chez InterEditions en 1994. Extension ".e".
.TP
.BR html
Extension ".html".
.TP
.BR shell
Conforme aux variantes bash et ksh. Extensions ".bash", ".ksh" et ".sh".
.TP
.BR sql
Respecte le standard MySQL 5.1. Extension ".sql".
.PP
La prise en charge de n'importe quel langage peut être simulée par
.B codemetre
de façon simpliste, ceci à travers le fichier de configuration utilisateur (voir plus loin).
.SH TOLÉRANCE PAR RAPPORT AUX NORMES OFFICIELLES
.IP Ada95
théoriquement, seuls les caractères ASCII 7 bits sont autorisés pour les constantes littérales.
.B codemetre
tolère tous les caractères 8 bits.
.SH TRAITEMENT PAR LOT
Les lots sont constitués de noms de fichiers à analyser (qui ne sont pas d'autres lots), ou des lignes vides. Lors de l'analyse différentielle avec deux lots, ceux-ci sont comparés ligne à ligne : le premier fichier du premier lot avec le premier fichier du second lot, puis le deuxième fichier du premier lot avec le deuxième fichier du second lot, et ainsi de suite. Si les deux lots ne font pas le même nombre de ligne, le plus court est considéré comme se poursuivant avec autant de lignes vides que nécessaire.
.SH MODÈLE DIFFÉRENTIEL
Il existe plusieurs modèles de comptage différentiel, chacun étant détaillé dans une section plus loin. Le modèle normal est le modèle par défaut. Le modèle utilisé est configurable à travers l'option
.B --model.
.TP
.BR normal
Modèle constitué de trois métriques fondamentales, permettant d'ailleurs d'en construire d'autres (comme l'effort par exemple). Celles-ci sont
.B A
(nombre de lignes de l'ancienne version),
.B N
(nombre de lignes de la nouvelle version), et
.B C
(nombre de lignes communes aux deux versions)
.TP
.BR effort
Modèle constitué d'une unique métrique reflétant l'effort fourni pour passer de l'ancienne version à la nouvelle. Une valeur de 0% dénote un fichier non modifié, de 100% un fichier totalement réécrit. Par rapport aux définitions du modèle normal, c'est l'extension par continuité de la formule
.B (N-C)/N
.SH FICHIER DE CONFIGURATION
Chaque utilisateur peut surcharger les options par défaut de
.I codemetre
dans un fichier au format similaire à ce qui peut-être obtenu par le biais de la commande
.B codemetre --config.
.SS "Localisation du fichier de configuration"
Le fichier de configuration est recherché à des endroits différents en fonction du système d'exploitation employé.
.TP
.BR Linux
Le fichier
.B .codemetrerc
est cherché dans ${HOME}.
.TP
.BR Windows
Le fichier
.B codemetre.ini
est cherché dans %APPDATA%.
.SS "Opérateurs"
La valeur d'une variable est fixée grâce à l'opérateur
.B :=. En l'absence d'opérande à droite, ceci est interprété comme un effacement de la variable.
Il existe aussi deux autres opérateurs pour modifier les listes,
.B +=
et
.B -=
, qui modifient la variable en y respectivement ajoutant et supprimant des valeurs.
.SS "Simulation de support de langages"
L'ajout d'associations dans la section [langage] du fichier de configuration permet une prise en charge simpliste de langages non officiellement supportés. Par exemple, un support du langage Python peut être fait à peu de frais en rajoutant dans le fichier de configuration le code suivant :
.nf
.RS 4
\&...
[langage]
  python := .py
\&...
.RE
.fi
.PP
Ceci peut être répété pour autant de langages que l'on veut.
.PP
Le simulateur considère que chaque ligne du fichier d'entrée, hormis les blancs de début et de fin, est une ligne de code si elle est non vide. Ainsi, le simulateur ne permettra jamais de faire de distinction code/commentaire.
.SH CODE DE RETOUR
.B codemetre
renvoit toujours 0.
.SH COPYRIGHT
Copyright © 2005, 2006, 2007, 2008, 2009, 2010 Guillaume Lemaître.

Ce programme est libre ; consultez le code source pour en connaître les conditions de distribution. Ce programme n'est en aucun cas garanti.
.SH BOGUES
.SS "Signaler des bogues"
Tout comportement anormal ou incohérent peut être signalé sur le site du projet, à savoir
.B http://github.com/seventh/codemetre/issues
.SS "Bogues connus"
.B codemetre
ne fait pas l'expansion des macro-commandes du C/C++, même si ceci ne modifierait pas les mesures produites. En effet, certaines macros-commandes peuvent être définies ailleurs que dans le fichier sous analyse, et
.B codemetre
n'a pas connaissance de l'organisation du projet et des règles de visibilités entre répertoires.

La double association d'une même extension à la fois pour les lots et un langage particulier n'est pas détectée. Néanmoins, l'association au lot prévaut.

Lors d'une mesure différentielle, tout bloc déplacé n'est a priori pas considéré commun aux deux versions de fichier, parce que l'impact de ce mouvement ne peut être évalué.

Concernant Eiffel,
.B codemetre
ne supporte pas tous les foisonnements de syntaxe particuliers à chaque compilateur.
.SH "VOIR AUSSI"
.BR diff (1),
.BR wc(1).
.SH AUTEUR
Guillaume Lemaître	<guillaume.lemaitre@gmail.com>
